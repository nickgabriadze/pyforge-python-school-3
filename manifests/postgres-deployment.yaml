apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: postgres
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: postgres
  strategy:
    type: Recreate
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.network/pyforge-python-school-3-default: "true"
        io.kompose.service: postgres
    spec:
      containers:
        - args:
            - postgres
            - -c
            - max_connections=1000
            - -c
            - shared_buffers=256MB
            - -c
            - effective_cache_size=768MB
            - -c
            - maintenance_work_mem=64MB
            - -c
            - checkpoint_completion_target=0.7
            - -c
            - wal_buffers=16MB
            - -c
            - default_statistics_target=100
          env:
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
            - name: molecules_db
            - name: root
            - name: postgres
          image: postgres:latest
          livenessProbe:
            exec:
              command:
                - 'pg_isready -U  -d '
            failureThreshold: 5
            periodSeconds: 30
            timeoutSeconds: 10
          name: postgres-molecules-database
          ports:
            - containerPort: 5433
              hostPort: 5432
              protocol: TCP
          resources:
            limits:
              cpu: 500m
              memory: "536870912"
            requests:
              cpu: 250m
              memory: "268435456"
          stdin: true
          tty: true
          volumeMounts:
            - mountPath: /var/lib/postgresql/data/pgdata
              name: pgdata
      restartPolicy: Always
      volumes:
        - name: pgdata
          persistentVolumeClaim:
            claimName: pgdata
status: {}
